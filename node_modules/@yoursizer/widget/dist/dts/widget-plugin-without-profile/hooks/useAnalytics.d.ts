interface UseAnalyticsProps {
    licenseKey: string;
    productId?: string;
    isMobile: boolean;
    step: number;
    gender: 'male' | 'female' | null;
    measurements: {
        height: string;
        weight: string;
        chest: string;
        waist: string;
        hips: string;
    };
    fitPreference: 'slim' | 'regular' | 'relaxed';
    apiSizeResult: {
        size?: string;
        confidence?: number;
        method?: string;
        error?: string;
        explanation?: string;
        fit_notes?: string;
        alternative_sizes?: Array<{
            size: string;
            confidence: number;
            reason?: string;
        }>;
        smaller_size?: string;
        larger_size?: string;
        range_type?: string;
        comments?: {
            main: string;
            smaller: string;
            larger: string;
        };
        user_measurements?: {
            Chest: number;
            Hip: number;
            Waist: number;
            Height: number;
            Weight: number;
        };
    } | null;
    hasTrackedRecommendation: boolean;
    setHasTrackedRecommendation: (tracked: boolean) => void;
}
export declare function useAnalytics({ licenseKey, productId, isMobile, step, gender, measurements, fitPreference, apiSizeResult, hasTrackedRecommendation, setHasTrackedRecommendation }: UseAnalyticsProps): {
    trackPopupCompleted: () => void;
    trackMeasurementGuideOpened: (measurementType: "chest" | "waist" | "hips") => void;
    trackAddToCart: (size: string) => void;
};
export {};
