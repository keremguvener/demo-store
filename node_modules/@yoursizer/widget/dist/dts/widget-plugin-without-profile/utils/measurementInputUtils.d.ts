/**
 * Measurement Input Renderer Utilities
 * Consolidated measurement input rendering logic
 */
import React from 'react';
/**
 * Parameters for measurement input rendering
 */
export interface MeasurementInputParams {
    type: 'height' | 'weight' | 'chest' | 'waist' | 'hips';
    isMobile: boolean;
    measurements: any;
    setMeasurements: React.Dispatch<React.SetStateAction<any>>;
    useMetric: boolean;
    getLocalJSONBasedLimits?: (type: 'chest' | 'waist' | 'hips') => {
        min: number;
        max: number;
        default: number;
    };
    setShowMeasurementGuide?: (type: "chest" | "waist" | "hips" | null) => void;
    handleMorphChange?: (morphName: string, value: number) => void;
    handleWeightMorphs?: (weightValue: number) => void;
    setUserEditedMeasurements?: React.Dispatch<React.SetStateAction<any>>;
    debugData?: any;
}
/**
 * Render measurement input based on type and context
 */
export declare function renderMeasurementInput(params: MeasurementInputParams): React.ReactElement;
