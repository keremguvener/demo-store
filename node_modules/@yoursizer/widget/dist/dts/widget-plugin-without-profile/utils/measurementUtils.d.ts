export declare function cmToFeet(cm: number): string;
export declare function kgToLbs(kg: number): number;
export declare function lbsToKg(lbs: number): number;
export declare function feetToCm(feet: string): number;
interface JSONLimitsCache {
    [key: string]: {
        height: number;
        weight: number;
        gender: string;
        limits: {
            min: number;
            max: number;
            default: number;
        };
    };
}
export declare function getJSONBasedLimits(measurementType: 'chest' | 'waist' | 'hips', height: string | number, weight: string | number, gender: 'male' | 'female' | null, cache?: React.MutableRefObject<JSONLimitsCache>): {
    min: number;
    max: number;
    default: number;
};
export declare function calculateJSONBasedLimits(measurementType: 'chest' | 'waist' | 'hips', height: number, weight: number, gender: 'male' | 'female'): {
    min: number;
    max: number;
    default: number;
};
interface MeasurementRange {
    min: number;
    max: number;
    default: number;
}
export declare const getJSONBasedLimitsSync: (measurementType: "chest" | "waist" | "hips", height: string | number, weight: string | number, gender?: "male" | "female" | null) => MeasurementRange;
export declare function getShapeKeyValues(height: number, weight: number, chest: number, waist: number, hips: number, gender?: 'male' | 'female'): {
    height?: number;
    weight?: number;
    chest?: number;
    waist?: number;
    hips?: number;
    boy?: number;
    kilo?: number;
} | null;
export {};
