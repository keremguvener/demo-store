import React from 'react';
import { Measurements } from '../types/index';
interface UseMeasurementInputsParams {
    isMobile: boolean;
    measurements: Measurements;
    setMeasurements: React.Dispatch<React.SetStateAction<Measurements>>;
    useMetric: boolean;
    gender: 'male' | 'female' | null;
    getLocalJSONBasedLimits: (measurementType: 'chest' | 'waist' | 'hips') => {
        min: number;
        max: number;
        default: number;
    };
    setShowMeasurementGuide: (type: "chest" | "waist" | "hips" | null) => void;
    handleMorphChange: (morphName: string, value: number) => void;
    handleWeightMorphs: (weightValue: number) => void;
    setUserEditedMeasurements?: React.Dispatch<React.SetStateAction<{
        chest: boolean;
        waist: boolean;
        hips: boolean;
    }>>;
    debugData?: any;
}
interface UseMeasurementInputsReturn {
    renderMeasurementInputs: (type: 'height' | 'weight' | 'chest' | 'waist' | 'hips') => React.ReactElement;
}
export declare function useMeasurementInputs({ isMobile, measurements, setMeasurements, useMetric, gender, getLocalJSONBasedLimits, setShowMeasurementGuide, handleMorphChange, handleWeightMorphs, setUserEditedMeasurements, debugData }: UseMeasurementInputsParams): UseMeasurementInputsReturn;
export {};
