import { UserProfile } from '../lib/userProfileStorage';
export declare function useUserProfile(): {
    currentProfile: UserProfile | null;
    showUserProfileModal: boolean;
    isNewProfile: boolean;
    showFirstTimeNotification: boolean;
    isLoading: boolean;
    createProfile: (gender: "male" | "female", measurements: UserProfile["measurements"], fitPreference: UserProfile["fitPreference"]) => UserProfile;
    updateProfile: (updates: Partial<UserProfile>) => UserProfile | null;
    selectProfile: (profile: UserProfile) => void;
    deleteProfile: (profileId: string) => boolean;
    updateSizeRecommendation: (clothingType: string, size: string, confidence: number) => void;
    clearSizeRecommendation: (clothingType: string) => void;
    saveModelState: (modelState: UserProfile["modelState"]) => boolean;
    loadModelState: () => {
        morphValues: {
            [key: string]: number;
        };
        hairMorphValues: {
            [key: string]: number;
        };
        parameterValues: {
            [key: string]: number;
        };
        skinColor: string;
        hairType: "hair1" | "hair2" | null;
        measurements: {
            height: string;
            weight: string;
            chest: string;
            waist: string;
            hips: string;
        };
    } | null | undefined;
    getSizeRecommendationForProduct: (clothingType: string) => {
        size: string;
        confidence: number;
    } | null;
    startNewProfile: () => void;
    restartCurrentProfile: () => void;
    openProfileModal: () => void;
    closeProfileModal: () => void;
    closeFirstTimeNotification: () => void;
    clearAllProfiles: () => void;
    hasActiveProfile: boolean;
    getAllProfiles: () => UserProfile[];
    getProfileCount: number;
};
