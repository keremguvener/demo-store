/**
 * Slider Utilities
 * Consolidated slider configuration and helper functions
 */
/**
 * Common slider labels for different measurement types
 */
export declare const SLIDER_LABELS: {
    chest: string[];
    waist: string[];
    hips: string[];
    general: string[];
};
/**
 * Get dynamic range for measurement types based on fetched data
 */
export declare function getDynamicMeasurementRange(measurementType: 'chest' | 'waist' | 'hips', debugData: any, getLocalJSONBasedLimits: (type: 'chest' | 'waist' | 'hips') => {
    min: number;
    max: number;
    default: number;
}): {
    min: number;
    max: number;
};
/**
 * Get measurement range for display (metric/imperial)
 */
export declare function getDisplayRange(measurementType: 'height' | 'weight' | 'chest' | 'waist' | 'hips', useMetric: boolean, debugData?: any, getLocalJSONBasedLimits?: (type: 'chest' | 'waist' | 'hips') => {
    min: number;
    max: number;
    default: number;
}): {
    min: number;
    max: number;
    step: number;
};
/**
 * Format value for display
 */
export declare function formatValueForDisplay(value: number, measurementType: 'height' | 'weight' | 'chest' | 'waist' | 'hips', useMetric: boolean): string;
/**
 * Get current value for measurement
 */
export declare function getCurrentMeasurementValue(measurementType: 'chest' | 'waist' | 'hips', measurements: any, debugData: any): number;
